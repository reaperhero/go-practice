<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="35f6099b-cd4c-422a-b252-68e711adff40" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/errorswap/errors_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/errorswap/errors_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/other/huo_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/other/huo_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="22xL6zaOyXNYwfPQIFlq4v59PXl" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="false" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="settings.editor.selected.configurable" value="goland.project.structure" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/pkg/goroot/main" />
      <recent name="$PROJECT_DIR$/pkg/rsa" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestRegxIp in go-example-demo/pkg/goroot/regexp">
    <configuration name="go build go-practice/pkg/goroot/main" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-example-demo/pkg/goroot/main" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/pkg/goroot/main/map_main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestErrorS in go-example-demo/pkg/errorswap" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$/pkg/errorswap" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-example-demo/pkg/errorswap" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestErrorS\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestErrorWap in go-example-demo/pkg/errorswap" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$/pkg/errorswap" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-example-demo/pkg/errorswap" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestErrorWap\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRegxIp in go-example-demo/pkg/goroot/regexp" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$/pkg/goroot/regexp" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-example-demo/pkg/goroot/regexp" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRegxIp\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestSearchAlerts in go-example-demo/pkg/other" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$/pkg/other" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-example-demo/pkg/other" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSearchAlerts\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestRegxIp in go-example-demo/pkg/goroot/regexp" />
        <item itemvalue="Go Test.TestSearchAlerts in go-example-demo/pkg/other" />
        <item itemvalue="Go Test.TestErrorS in go-example-demo/pkg/errorswap" />
        <item itemvalue="Go Test.TestErrorWap in go-example-demo/pkg/errorswap" />
        <item itemvalue="Go Build.go build go-practice/pkg/goroot/main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>